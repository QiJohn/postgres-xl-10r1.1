事务块：begin标志事务块开始；commit(end)、rollback(abort) 等标志事务块结束

事务块的各种状态定义在xact.c文件typedef enum TBlockState 部分，注意事务块的状态和事务的状态是不一样的


================================================事务块状态变化（包含子事务）================================================
事务块一般有以下几种状态：typedef enum TBlockState
{
	/* not-in-transaction-block states */
	TBLOCK_DEFAULT,				/* idle  空闲*/
	TBLOCK_STARTED,				/* running single-query transaction  单个查询事务*/

	/* transaction block states */
	TBLOCK_BEGIN,				/* starting transaction block  开始事务块*/
	TBLOCK_INPROGRESS,			/* live transaction  进行中*/
	TBLOCK_PARALLEL_INPROGRESS, /* live transaction inside parallel worker  并行worker中的事务,进行中*/
	TBLOCK_END,					/* COMMIT received  接收到COMMIT*/
	TBLOCK_ABORT,				/* failed xact, awaiting ROLLBACK  失败,等待ROLLBACK*/
	TBLOCK_ABORT_END,			/* failed xact, ROLLBACK received  失败,已接收ROLLBACK*/
	TBLOCK_ABORT_PENDING,		/* live xact, ROLLBACK received  进行中,接收到ROLLBACK*/
	TBLOCK_PREPARE,				/* live xact, PREPARE received  进行中,接收到PREPARE*/

	/* subtransaction states */
	TBLOCK_SUBBEGIN,			/* starting a subtransaction  开启*/
	TBLOCK_SUBINPROGRESS,		/* live subtransaction  进行中*/
	TBLOCK_SUBRELEASE,			/* RELEASE received  接收到RELEASE*/
	TBLOCK_SUBCOMMIT,			/* COMMIT received while TBLOCK_SUBINPROGRESS  进行中,接收到COMMIT*/
	TBLOCK_SUBABORT,			/* failed subxact, awaiting ROLLBACK   失败,等待ROLLBACK*/
	TBLOCK_SUBABORT_END,		/* failed subxact, ROLLBACK received  失败,已接收ROLLBACK*/
	TBLOCK_SUBABORT_PENDING,	/* live subxact, ROLLBACK received  进行中,接收到ROLLBACK*/
	TBLOCK_SUBRESTART,			/* live subxact, ROLLBACK TO received  进行中,接收到ROLLBACK TO*/
	TBLOCK_SUBABORT_RESTART		/* failed subxact, ROLLBACK TO received  失败,已接收ROLLBACK TO*/
} TBlockState;

参考(事务快状态转换图)https://www.cnblogs.com/biterror/p/7161631.html
1、begin命令下事务块状态转换和函数
"TBLOCK_DEFAULT"-----StartTransactionCommand()---->"TBLOCK_STARTED"-----BeginTransactionBlock()---->"TBLOCK_BEGIN"-----CommitTransactionCommand()---->"TBLOCK_INPROGRESS"

"TBLOCK_SUBBEGIN"-----CommitTransactionCommand()---->"TBLOCK_SUBINPROGRESS"


2、commit、end命令下事务块状态转换和函数
"TBLOCK_INPROGRESS"-----EndTransactionBlock()---->"TBLOCK_END"-----CommitTransactionCommand()---->"TBLOCK_DEFAULT"

3、rollback、abort命令下事务块状态转换和函数
"TBLOCK_INPROGRESS"-----UserAbortTransactionBlock()---->"TBLOCK_ABORT_PENDING"-----CommitTransactionCommand()---->"TBLOCK_DEFAULT"

"TBLOCK_INPROGRESS"-----AbortCurrentTransaction()---->"TBLOCK_ABORT"-----UserAbortTransactionBlock()---->"TBLOCK_ABORT_END"-----CommitTransactionCommand()---->"TBLOCK_DEFAULT"

"TBLOCK_DEFAULT"-----StartTransactionCommand()---->"TBLOCK_STARTED"-----UserAbortTransactionBlock()---->"TBLOCK_ABORT_PENDING"




=================================================事务状态变化========================================================
事务一般只有以下几种简单状态：typedef enum TransState
{
	TRANS_DEFAULT,				/* idle  空闲*/
	TRANS_START,				/* transaction starting  事务启动*/
	TRANS_INPROGRESS,			/* inside a valid transaction  进行中*/
	TRANS_COMMIT,				/* commit in progress  提交中*/
	TRANS_ABORT,				/* abort in progress  回滚中*/
	TRANS_PREPARE				/* prepare in progress  准备中*/
} TransState;


1、begin命令下事务块状态转换和函数
"TRANS_DEFAULT"-----StartTransaction()---->"TRANS_START"---->"TRANS_INPROGRESS"
"TRANS_DEFAULT"-----StartSubTransaction()---->"TRANS_START"---->"TRANS_INPROGRESS"

2、commit、end命令下事务块状态转换和函数
"TRANS_INPROGRESS"-----CommitTransaction()---->"TRANS_COMMIT"---->"TRANS_DEFAULT"
"TRANS_INPROGRESS"-----CommitSubTransaction()---->"TRANS_COMMIT"---->"TRANS_DEFAULT"

3、prepare命令下事务块状态转换和函数
"TRANS_INPROGRESS"-----PrepareTransaction()---->"TRANS_PREPARE"---->"TRANS_DEFAULT"

4、rollback、abort命令下事务块状态转换和函数
"TRANS_INPROGRESS"或"TRANS_PREPARE"-----AbortTransaction()---->"TRANS_ABORT"
"TRANS_INPROGRESS"-----AbortSubTransaction()---->"TRANS_ABORT"

5、清理处理
"TRANS_ABORT"-----CleanupTransaction()---->"TRANS_DEFAULT"
"TRANS_ABORT"-----CleanupSubTransaction()---->"TRANS_DEFAULT"

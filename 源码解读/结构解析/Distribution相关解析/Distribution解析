所有的”subplans“应该拥有相同的”distribution“，但是”restriction“不要求一样；
当plan、path存在”distribution“时，需要调用make_remotesubplan、create_remotesubplan_path创建subplan、subpath

1、============分布式plan node的属性“Distribution”
（1）定义该“Distribution”的结构体在文件”src/include/nodes/relation.h“中，且该结构体是结构体PlannerInfo、Path等的成员变量。
	#ifdef XCP
	/*
	* Distribution is an attribute of distributed plan node. It describes on which node execution results can be found.
	*/
	typedef struct Distribution
	{
		NodeTag		type;
		char		distributionType;
		Node	   *distributionExpr;
		Bitmapset  *nodes;
		Bitmapset  *restrictNodes;
	} Distribution;
	#endif

	成员变量“distributionType”的取值以及值对应的含义如下所示：
		#define LOCATOR_TYPE_REPLICATED 'R'                          //'R' for Replicated type
		#define LOCATOR_TYPE_HASH 'H'                                   //’H’ for hash distribution type.
		#define LOCATOR_TYPE_RANGE 'G'                                //’G’ for range distribution type.
		#define LOCATOR_TYPE_SINGLE 'S'
		#define LOCATOR_TYPE_RROBIN 'N'                              //’N’ for round-robin distribution type.
		#define LOCATOR_TYPE_CUSTOM 'C'                             //’C’ for custom distribution type.
		#define LOCATOR_TYPE_MODULO 'M'                           //’M’ for modulo distribution type.
		#define LOCATOR_TYPE_NONE 'O'                                 //’O’ for non-distribution type.
		#define LOCATOR_TYPE_DISTRIBUTED 'D'      // ’D’ for distribution type without specific scheme. 例如:result of JOIN of replicated and distributed table









	针对该结构体通过“makeNode(Distribution)”进行初始化、或是使用“retval = (Distribution *) copyObject(distribution)”、“retval = _copyDistribution(from)”进行对象复制
	该结构体的类型为“T_Distribution”








2、============在创建表时设置分布建
（1）定义该“DistributeBy”的结构体在文件”src/include/nodes/primnodes.h“中，用于和SQL语句中的“DISTRIBUTE   BY”子句进行对应
	/*
	* DistributeBy - represents a DISTRIBUTE BY clause in a CREATE TABLE statement
	*/
	typedef struct DistributeBy
	{
		NodeTag		type;
		DistributionType disttype;		/* Distribution type */
		char	   	*colname;		/* Distribution column name */
	} DistributeBy;

	成员变量“disttype”的取值以及值对应的含义如下所示：
			DISTTYPE_REPLICATION,			/* Replicated */
			DISTTYPE_HASH,				/* Hash partitioned */
			DISTTYPE_ROUNDROBIN,			/* Round Robin */
			DISTTYPE_MODULO				/* Modulo partitioned */











3、================表的分布式属性（Table Distribution Attributes）
（1）在postgres-xl的表空间中，会创建一张表用于存储table distribution/redistribution的相关信息，如下所示：
	postgres=# select * from pg_catalog.pgxc_class ;
	pcrelid | pclocatortype | pcattnum | pchashalgorithm | pchashbuckets |  nodeoids
	---------+--------------+-----------+-------------------+----------------+-------------
	16387    | H                  |        1        |               1             |          4096       | 16385 16386
	16390    | H                  |        1        |               1             |          4096       | 16385 16386
	16393    | H                  |        1        |               1             |          4096       | 16385 16386
	16398    | H                  |        1        |               1             |          4096       | 16385 16386
	16408    | H                  |        1        |               1             |          4096       | 16385 16386
	16412    | H                  |        1        |               1             |          4096       | 16385 16386
	(6 rows)

	该表在程序中对应的结构体和变量存储在文件“src/include/catalog/pgxc_class.h”中，其中字段“pcrelid”标识表的OID值；“pclocatortype”标识distribution的类型；
	“pcattnum”标识distribution的列数；“pchashalgorithm”标识hash算法；“pchashbuckets”标识bucket的数目；“nodeoids”标识表使用的node的OID集合。

	定义该表的sql语句例如：CREATE TABLE .... DISTRIBUTED BY ... NODE ...





（2）在“src/backend/utils/cache/lsyscache.c”定义了一方法用于获取相关的datanode列表
	1、获取给定关系Oid的PGXC类Datanode列表：int  get_pgxc_classnodes(Oid tableid, Oid **nodes)






（3）在“src/backend/catalog/pgxc_class.c”定义了一系列的方法用于支持操作pg_catalog下的pgxc_class
	1、创建一个pgxc_class entry：void PgxcClassCreate(Oid pcrelid, char pclocatortype, int pcattnum,
				int pchashalgorithm, int pchashbuckets,	int numnodes, Oid *nodes)

	2、使用给的的数据修改pgxc_class entry：void PgxcClassAlter(Oid pcrelid, char pclocatortype, int pcattnum,
			   int pchashalgorithm, int pchashbuckets, int numnodes, Oid *nodes, PgxcClassAlterType type)

	3、删除扩展的PGXC信息：void RemovePgxcClass(Oid pcrelid)







